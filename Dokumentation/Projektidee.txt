=== Projektidee anita1997, 2016-04-05 ===

Meine Projektidee

Bei meiner Projektidee handelt es sich um ein Spiel. 
Durch einen Linksklick der Maus kann der Nutzer eine Spielfigur zum springen bringen.
Damit soll man über Löcher im Boden springen.
Der Boden wird ab und zu von jenen unterbrochen.
Die Löcher wären in zwei verschiedenen Größen vorhanden. 
Einmal genauso breit wie die Figur und doppelt so breit.
Der Nutzer hätte zum springen zwei Optionen. 
Das einmalige klicken ermöglicht einen einfachen Sprung. Das doppelte klicken einen doppelten Sprung. 
Der einfache reicht für die kleinen Löcher. Der doppelte für die größeren.
Der Nutzer startet die Figur am linken Spielfeldrand. Die Figur springt nur und bewegt sich nicht andersweitig.
Der Boden bewegt sich von rechts nach links. Somit auch die verschiedenen Löcher.
Das Spiel ist beendet wenn die Figur in ein Loch fällt.


=== Projektidee nach Feedback bearbeitet ===

Bei meiner Projektidee handelt es sich um ein Spiel. 
Dem Nutzer ist es möglich eine Spielfigur zum springen zu bringen
Der Nutzer hätte zum springen zwei Optionen.
Die zwei Optionen unterscheiden sich durch die Länge der Sprünge.


=== Feedback Alpers, 2016-04-14 ===

> Durch einen Linksklick der Maus kann der Nutzer eine Spielfigur zum springen bringen.

Lassen Sie feste Vorgaben wie "mit der Maustaste" vorerst außen vor. Wichtig ist hier nur, dass es eine Interaktionsmöglichkeit geben soll, durch die NutzerInnen die Spielfigur zum Springen bringen können.

> Damit soll man über Löcher im Boden springen.
> Der Boden wird ab und zu von jenen unterbrochen.
> Die Löcher wären in zwei verschiedenen Größen vorhanden. 
> Einmal genauso breit wie die Figur und doppelt so breit.

Hier haben Sie schon den nächsten Schritt gemacht: Sie erklären, wozu die Interaktionsmöglichkeiten dienen sollen. Das wird aber erst später relevant, wenn Sie beschreiben sollen, wie die Funktionalität der Anwendung/des Spiels aussehen soll.

> Der Nutzer hätte zum springen zwei Optionen. 
> Das einmalige klicken ermöglicht einen einfachen Sprung. Das doppelte klicken einen doppelten Sprung. 

Für die aktuelle Aufgabenstellung bedeutet das, dass es zwei verschiedene Interaktionsmöglichkeiten geben soll, die sich beide auf das Springen des Charakters beziehen. (Konkret unterscheiden Sie sich dadurch, dass unterschiedlich lang, weit usw. gesprungen wird.)

> Der Nutzer startet die Figur am linken Spielfeldrand. Die Figur springt nur und bewegt sich nicht andersweitig.
> Der Boden bewegt sich von rechts nach links. Somit auch die verschiedenen Löcher.

Auch hier: Für die aktuelle Aufgabenstellung sind diese beiden Punkte nicht relevant. Hier ist nur relevant, dass es die beiden oben genannten Interaktionsmöglichkeiten geben soll.

Aber missverstehen Sie das nicht: Sie haben hier bereits vorgearbeitet. Wichtig ist bei der aktuellen Aufgabenstellung (wie auch generell bei diesem Projekt), dass Sie genau zwischen den unterschiedlichen Aspekten der Softwareentwicklung unterscheiden: Momentan bewegen wir uns im Bereich der Strukturierung der Software. Es ist für diesen Bereich also nur relevant, aus welchen Bestandteilen die Software bestehen soll (das schließt auch ggf. mehrere Ansichten mit ein). Dagegen ist es für diesen Bereich irrelevant, wie die Funktionalität einzelner Elemente umgesetzt wird. (Das gleiche gilt für die Frage, wie das ganze aussehen oder klingen wird, sprich fürs Design. Und genauso gilt es für die Frage, welche Daten wir speichern bzw. auswerten.)

Trennen Sie jetzt bitte die Teile der Beschreibung der Projektidee, die das "wie können NutzerInnen interagieren" klären, von den Teilen, die klären, wie die Funktionalität, der Levelaufbau usw. umgesetzt werden.

=== Zweiter Aufgabenblock (identisch für alle Studierenden) ===

Sie haben jetzt gezeigt, dass Sie einfache Arbeiten mit einem Git-Repository beherrschen.
Als Teil der letzten Aufgabe sollten Sie beschreiben, was Ihre Anwendung tun soll, also was für Funktionalitäten Ihre Anwendung bieten soll.
Wenn Sie hier nichts angegeben haben, dann werde ich Ihnen einen Vorschlag hochladen, mit dem Sie weiterarbeiten können.
In der Veranstaltung haben Sie außerdem gelernt, was Markup Languages sind.

Die nächste Aufgabe besteht aus den folgenden Teilen:

1.) Lesen Sie mein Feedback durch und setzen Sie die beschriebenen Aufgaben um.

Für die folgende Aufgabe sollten Sie mindestens eine halbe Stunde investieren. Zwei Stunden wäre aber etwas zu viel des guten.
Bearbeiten Sie die Aufgaben 2. und 3. bitte innerhalb von 48 Stunden, weil andere Studierende davon abhängen, dass Sie sie beendet haben.
Bearbeiten Sie die Aufgaben auf jeden Fall in der vorgegebenen Reihenfolge.
Und bearbeiten Sie eine Aufgabe nicht nachträglich nochmal. (Wenn Sie also z.B. Aufgabe 3. bearbeiten, dann ändern Sie bitte nichts an Aufgabe 1. nachträglich ab. Dafür wird später noch genug Zeit sein.)

2.) Bennen Sie die strukturellen Elemente, aus denen Ihre Anwendung bestehen soll.
Es ist dabei egal, ob es diese Elemente in HTML gibt.
Es ist auch egal, ob Sie sich schon in HTML eingearbeitet haben.
Wichtig ist nur, dass Sie die strukturellen Elemente benennen, aus der die Anwendung bestehen soll.
Speichern Sie diese Aufstellung als HTML-Kommentar in einer Datei mit dem Namen

strukt.html

, die Sie in Ihrem Repository abspeichern. Wichtig: Die Datei soll nicht im Unterverzeichnis Dokumentation des Repositories gespeichert werden, weil sie die Basis für das erste HTML-Dokument werden wird.

Wenn Sie noch unsicher sind: Strukturelle Elemente können alles mögliche sein:
- Tabellen
- Listen
- Schaltflächen
- Textfelder
- Bildbereiche
- Hintergrundmusik
- Absätze
- ...

In anderen Worten: Ein strukturelles Element ist etwas, das ein abgegrenzter Teil der Anwendung ist.
Notieren Sie kurz, welche Funktion jedes der von Ihnen genannten Elemente haben soll.

Hier einige Beispiele:
- Schaltfläche (Nutzer können per Klick bestätigen, dass eine Eingabe abgeschickt werden soll.)
- Textfeld für Namen (Nutzer können Ihren Nachnamen eintragen.)
- Log-In-Maske (Bereich, in dem Nutzer sich einloggen können.)
- - Teile der Log-In-Maske:
- - Textfeld für Username
- - Textfeld, das die Eingabe nicht anzeigt, fürs Passwort
- Tabelle, 7 x 5 Felder (Jedes Feld soll ein Bild anzeigen, das ein Feld des Spielbretts ist. Wenn Nutzer ein Feld anwählen, soll ein Menü erscheinen.)
- - Menü für jedes Feld der Tabelle mit Texteinträgen (Eintrag für "Gebäude abreißen", "Feld kaufen")
- Hintergrundbild (Hier sollen einzelne Bilder als Diashow eingeblendet werden.)
- Werbebanner
- Schaltfläche für die Maskierung von NSFW (NSFW = Not safe for work)(NutzerInnen können über diese Schaltfläche eine andere Anwendung in der Vordergrund einblenden lassen, damit der Chef nicht sieht, dass sie gerade spielen.)

3.) Schauen Sie jetzt in der Liste der Repositories (nicht in der Tabelle der Accounts) nach, welche zehn Repositories vor und nach Ihrem Repository aufgeführt sind und geben Sie den Besitzern dieser Repositories Zugriffsrechte auf Ihr Repository.

Bsp.: Sie haben das Repository BerndStromberg. Dann folgen die zehn Repositories der Nutzer BlackWolf63, Cantinaband, CaptainWeasle, ColePfeiffer, CurvLietzau,
DangerDulf, dnbdel, Domsche, Eldinox und Eupuco und vor Ihnen gibt es die fünf Repositories der Nutzer 2238867, amelie-beh, Anger21, anita1997 und Asphalon. all diesen Accounts geben Sie jetzt Zugriffsrechte auf Ihr Repository, so wie Sie das schon für mich getan haben. Wenn Sie, wie BerndStrommberg zu weit am Anfang der Liste stehen (hier gibt es ja nur fünf andere Accounts bis zum Anfang der Liste), dann geben Sie zusätzlich noch den Besitzern der letzten fünf Repositories Zugriffsrechte. Es sollten insgesamt 20 Accounts Zugriffsrecht haben.

Für die nächsten zwei Aufgaben sollten Sie pro Repository zwischen zehn Minuten und einer Stunde aufwenden. Weniger ist zu wenig und mehr ist zu viel.
Beachten Sie dabei bitte, dass Sie hier letzten Endes Kritik an der Arbeit eines/einer anderen üben und das einige von Ihnen noch nie programmiert haben. Arbeiten Sie deshalb bitte daran, alles, was Sie ergänzen so neutral und höflich wie möglich zu formulieren, denn Unwissenheit und mangelndes Verständnis fürs Programmieren sind eben nicht das selbe wie Dummheit oder Faulheit.

Bitte erledigen Sie diese Aufgaben innerhalb der nächsten sieben Tage.

4.) Als nächstes greifen Sie auf die nach Ihrem Repository nachfolgenden fünf Repositories zu und bearbeiten hier die folgende Aufgabe. (Hier hängen Sie also davon ab, dass andere Kommilitonen Aufgabe 3. erledigt haben.) 

Lesen Sie sich die Projektidee durch und machen Sie sich ähnlich wie bei 2. einfache Stichpunkte über strukturelle Elemente, die Sie bei dieser Projektidee sinnvoll finden. (Hier erstmal nur Stichpunkte, Details arbeiten Sie unter 5. aus.)

5.) Öffnen Sie jetzt die Datei strukt.html des Repositories, das Sie gerade bearbeiten. Ergänzen Sie Elemente, die Sie unter 4. notiert haben und die noch nicht eingetragen sind in der unter 2. beschriebenen Form.

Abschließender Hinweis zu 4. und 5.:

Auch wenn das nirgends explizit steht sollen Sie Änderungen in das Repository pushen, aus dem sie die Datei strukt.html gepullt haben.
Es ist dabei sehr wahrscheinlich, dass Sie (vielleicht auch erst später während der Projektbearbeitung) einen merge durchführen müssen. Wenn Sie sich noch nicht angesehen haben, wie das geht, dann tun Sie es jetzt.

Viele Grüße,
Markus Alpers
